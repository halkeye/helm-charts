{{- if not .Values.foundryvtt.existingUserSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "foundry-vtt.fullname" . }}
  labels:
    app: {{ template "foundry-vtt.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  adminPassword: {{ .Values.foundryvtt.adminPassword | b64enc }}
  {{- if not .Values.foundryvtt.licenseKey }}
  username: {{ .Values.foundryvtt.username | b64enc }}
  password: {{ .Values.foundryvtt.password | b64enc }}
  {{- else }}
  licenseKey: {{ .Values.foundryvtt.licenseKey | b64enc }}
  {{- end }}
{{- end}}
---
{{- if and (eq .Values.foundryvtt.s3.enabled true) (eq .Values.foundryvtt.s3.existingSecret "") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "foundry-vtt.fullname" . }}-aws
  labels:
    app: {{ template "foundry-vtt.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  aws-credentials.json: {{ printf "{\"accessKeyId\": \"%s\", \"secretAccessKey\": \"%s\", \"region\": \"%s\", \"endpoint\": \"%s\" }" .Values.foundryvtt.s3.config.accessKey .Values.foundryvtt.s3.config.secretKey .Values.foundryvtt.s3.config.region .Values.foundryvtt.s3.config.endpoint | b64enc }}
{{- end }}

---
{{- if .Values.foundryvtt.turnConfigs -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "foundry-vtt.fullname" . }}-turn-configs
  labels:
    app: {{ template "foundry-vtt.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  turnConfigs.json: {{ toJson .Values.foundryvtt.turnConfigs | b64enc }}
{{- end }}
