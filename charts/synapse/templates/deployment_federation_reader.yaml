apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "synapse.fullname" . }}-federation-reader
  labels:
{{ include "synapse.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCounts.federation_reader }}
{{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
{{ if eq .Values.strategy.type "Recreate" }}
    rollingUpdate: null
{{- end }}
{{- end }}
  selector:
    matchLabels:
      synapse-component: federation-reader
      app.kubernetes.io/name: {{ include "synapse.name" . }}-federation-reader
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        synapse-component: federation-reader
        app.kubernetes.io/name: {{ include "synapse.name" . }}-federation-reader
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      # Avoid co-locating workers with the main Synapse pod if possible
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "synapse.name" . }}
              topologyKey: kubernetes.io/hostname
    {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "synapse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              set -ex
              cp /config/* /data/
              {{ include "synapse.installPip" . | nindent 14 }}
              chown -R "{{ .Values.settings.uid }}:{{ .Values.settings.gid }}" /data
              python -m "synapse.app.federation_reader" --config-path "/config/homeserver.yaml" --config-path "/config/federation-reader"
          ports:
            - name: http
              containerPort: {{ (index .Values.federation_reader.worker_listeners 0).port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          env:
            - { name: SYNAPSE_CACHE_FACTOR, value: {{ .Values.cacheFactor | toString | quote }} }
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          secret:
            secretName: {{ include "synapse.fullname" . }}
